;; ------------- control flow ------------- 
;; conditional operator

(? 
    true                    ;; <- condition
    (. "condition met")     ;; <- executed if condition is met
)

(? 
    false                 ;; <- condition
    (. "condition not met")   ;; <- executed if condition is met
)

;; comparison operators

;; equals works for normal values, such as strings, floats, booleans
(. 
    "all equal ->"
    (= 1 1)
    (= "equal" "equal")
    (= true true))

;; and for variables
(: a 1 2)
(: b 2 1)
(. 
    "not equal ->"
    (= a a)
    "not equal ->"
    (= a b))
;; but not how you think... Sophia merges the lists in the variables to compare
;; into a singular list and checks if all elements in it are the same thats why
;; a is not equal to a itself

;; and
;; (. 
;;     (& true false))

;; or
;; (. 
;;     (| true false))

;; vim: syntax=lisp
